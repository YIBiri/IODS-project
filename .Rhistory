install.packages(c("twitteR", "devtools", "rjson", "bit64", "httr"))
library(devtools)
install_github("geoffjentry/twitteR")
#Ylva Biri
#Data wrangling
# 1. Creation & setting up
setwd("C:/Users/Ylva/Documents/GitHub/IODS-project")
library(dplyr)
library(stringr)
# 2. Reading data
hd <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human_development.csv", stringsAsFactors = F)
gii <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/gender_inequality.csv", stringsAsFactors = F, na.strings = "..")
# 3. Exploring the data
str(hd)
dim(hd)
str(gii)
dim(gii)
# hd = 195 obs, 8 var
# gii = 195 obs, 10 var
# 4. Renaming variables
colnames(hd) <- c("hdi_rank", "country", "hdi", "lifexp", "exped", "yrsed", "gni", "gni_hdi")
colnames(gii) <- c("gii_rank", "country", "gii", "matmor", "adbirth", "parlperc", "secedF", "secedM", "laborF", "laborM")
# 5. Mutate data
# ratio of Female and Male populations with secondary education in each country
gii <- mutate(gii, eduratio = secedF / secedM)
# ratio of labour force participation of females and males in each country
gii <- mutate(gii, labratio = laborF / laborM)
# checking everything is ok
head(gii)
# 6. Joining datasets using "country"
human <- inner_join(hd, gii, by = "country", suffix = c(".hd", ".gii"))
# Saving data
write.table(human, file = "data/human.txt", sep = "\t")
# Check updated data
humantest <- read.table("data/human.txt")
# checking...
str(human)
# EXERCISE 5
# GNI to numeric
str(human)
human$gni <- str_replace(human$gni, pattern=",", replace ="") %>% as.numeric()
str(human)
# Exclude unnecessary variables
keep <- c("country", "eduratio", "labratio", "exped", "lifexp", "gni", "matmor", "adbirth", "parlperc")
human <- select(human, one_of(keep))
dim(human2)
# Remove rows with NA values
human <- filter(human, complete.cases(human))
# Remove regions
human$country
# i.e. remove the last 7 rows
last <- nrow(human) - 7
human <- human[1:last, ]
# Define rows by country, remove country
rownames(human) <- human$country
human <- select(human, -country)
#Check output
summary(human)
# Save and overwrite old data
write.table(human, file = "data/human.txt", sep = "\t")
# Check updated data
humantest <- read.table("data/human.txt")
library(ggplot2)
library(GGally)
library(tidyverse)
library(corrplot)
library(dplyr)
human <- read.table("data/human.txt")
str(human)
library(ggplot2)
library(GGally)
ggpairs(human)
cor_matrix<-cor(human) %>% corrplot(method="circle", type = "upper", tl.pos = "d", tl.cex = 0.8)
library(factominer)
library(Factominer)
install.packages("Factominer")
library(FactoMineR)
data(tea)
library(FactoMineR)
data(tea)
str(tea)
mca <- MCA(tea)
tea2 <- Select(tea, -age)
tea2 <- select(tea, -age)
str(tea2)
tea2 <- select(tea, -age)
str(tea2)
mca <- MCA(tea2)
tea2 <- select(tea, -age)
str(tea2)
mca <- MCA(tea2,graph = FALSE)
# summary of the model
summary(mca)
# visualize MCA
plot(mca, invisible=c("ind"), habillage = "quali")
biplot(tea2, cex = c(0.8, 1), col = c("grey40", "deeppink2"), xlab = pc_lab[1], ylab = pc_lab[2])
tea2 <- select(tea, -age)
str(tea2)
mca <- MCA(tea2,graph = FALSE)
# summary of the model
s <- summary(mca)
s
# visualize MCA
plot(mca, invisible=c("ind"), habillage = "quali")
mca_pr <- round(1*s$eig[2, ], digits = 5)
# print out the percentages of variance
mca_pr <- mca_pr * 100
mca_pr <- round(mca_pr, digits = 1)
mca_pr
mc_lab <- paste0(names(mca_pr), " (", mca_pr, "%)")
biplot(tea2, cex = c(0.8, 1), col = c("grey40", "deeppink2"), xlab = pc_lab[1], ylab = pc_lab[2])
mca_pr <- round(1*s$eig[2, ], digits = 5)
# print out the percentages of variance
mca_pr <- mca_pr * 100
mca_pr <- round(mca_pr, digits = 1)
mca_pr
mca_pr <- round(1*s$eig[2, ], digits = 5)
# print out the percentages of variance
mca_pr <- mca_pr * 100
mca_pr <- round(mca_pr, digits = 1)
mca_pr
mc_lab <- paste0(names(mca_pr), " (", mca_pr, "%)")
biplot(tea2, cex = c(0.8, 1), col = c("grey40", "deeppink2"), xlab = mc_lab[1], ylab = mc_lab[2])
mca_pr <- round(1*mca$eig[2, ], digits = 5)
# print out the percentages of variance
mca_pr <- mca_pr * 100
mca_pr <- round(mca_pr, digits = 1)
mca_pr
mca_pr <- round(1*mca$eig[2, ], digits = 5)
mca_pr <- round(mca$eig[2, ], digits = 5)
mca_pr <- round(mca$eig[2], digits = 5)
mca_pr <- round(mca$eig[2], digits = 5)
# print out the percentages of variance
mca_pr <- mca_pr * 100
mca_pr <- round(mca_pr, digits = 1)
mca_pr
mc_lab <- paste0(names(mca_pr), " (", mca_pr, "%)")
biplot(tea2, cex = c(0.8, 1), col = c("grey40", "deeppink2"), xlab = mc_lab[1], ylab = mc_lab[2])
library(factoextra)
fviz_mca_biplot(mca,
repel = TRUE, # Avoid text overlapping (slow if many point)
ggtheme = theme_minimal())
